name: Go CI

on:
  push:
    paths:
      - 'app_go/**'
  pull_request:
    paths:
      - 'app_go/**'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Cache Go modules
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('app_go/go.mod') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.21

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v4
        with:
          version: v1.54

      - name: Build
        run: |
          cd app_go && go build ./cmd/app/*

      - name: Test
        run: |
          cd app_go && go test -v ./...

  security:
    runs-on: ubuntu-latest

    needs:
      - build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/golang@master
        with:
          args: --skip-unresolved app_go/
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  docker:
    runs-on: ubuntu-latest

    needs:
      - build
      - security
    services:
      docker:
        image: docker:latest
        options: --privileged

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/app_go:latest ./app_go

      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/app_go:latest
